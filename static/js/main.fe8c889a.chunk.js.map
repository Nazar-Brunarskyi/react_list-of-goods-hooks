{"version":3,"sources":["types/SortType.ts","functions/getReorderedGoods.ts","App.tsx","index.tsx"],"names":["SortType","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","sort","itemA","itemB","ALPHABET","localeCompare","length","reverse","goodsFromServer","App","useState","setSortType","setReverse","className","type","onClick","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAKA,E,oDAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAMUA,Q,OCHR,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAczB,OAZIC,IAAaH,EAASM,MACxBD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAON,IAAaH,EAASU,SACzBF,EAAMG,cAAcF,GACpBD,EAAMI,OAASH,EAAMG,UAIzBR,GACFC,EAAaQ,UAGRR,E,WCfIS,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAgCC,mBAAShB,EAASM,MAAlD,mBAAOH,EAAP,KAAiBc,EAAjB,KACA,EAAiCD,oBAAS,GAA1C,mBAAOZ,EAAP,KAAmBc,EAAnB,KAOA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBhB,IAAaH,EAASU,SAAW,GAAK,YACnEW,QAAS,kBAAMJ,EAAYjB,EAASU,WAHtC,iCAQA,wBACEU,KAAK,SACLD,UAAS,4BAAuBhB,IAAaH,EAASsB,OAAS,GAAK,YACpED,QAAS,kBAAMJ,EAAYjB,EAASsB,SAHtC,4BAQA,wBACEF,KAAK,SACLD,UAAS,4BAAuBf,EAAa,GAAK,YAClDiB,QAAS,kBAAMH,GAAYd,IAH7B,sBASGA,GAAcD,IAAaH,EAASM,OAEnC,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAtCO,WACjBJ,EAAYjB,EAASM,MACrBY,GAAW,IAiCH,sBAYN,6BACE,6BAEIjB,EAAkBa,EAAiB,CAAEX,WAAUC,eAC5CmB,KAAI,SAACC,GAAD,OACH,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cCxEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fe8c889a.chunk.js","sourcesContent":["enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport default SortType;\n","import ReorderOptions from '../types/ReorderOptions';\nimport SortType from '../types/SortType';\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((itemA, itemB) => {\n      return sortType === SortType.ALPHABET\n        ? itemA.localeCompare(itemB)\n        : itemA.length - itemB.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport {};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport SortType from './types/SortType';\nimport { getReorderedGoods } from './functions/getReorderedGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const setDefault = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {\n          (isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={setDefault}\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map((good) => (\n                <li key={good} data-cy=\"Good\">{good}</li>\n              ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}